Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage")
View(NHL_Stats_2020_2021)
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Nikita Kucherov" | Player == "Victor Hedman") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Nikita Kucherov" | Player == "Victor Hedman") %>%
select(Player, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Nikita Kucherov" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "David Pastrnak" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "David Pastrnak" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Kris Letang" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "Sidney Crosby") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage")
library(readr)
Defensive_Stats_Sheet1 <- read_csv("Defensive Stats - Sheet1.csv")
View(Defensive_Stats_Sheet1)
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "David Pastrnak") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)") %>%
tab_source_note(md("More information on player rankings available at NBCSports.com"))) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)") %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>% )
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)"),
subtitle = "Here's a look into the NHL's top center, left wing, right wing, and defensemen from the 2020-21 regular season."
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)")
) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
HITS = "Hits", BS = "Blocked Shots")
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(
Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage")
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage") %>%
cols_align(align = "left", columns = Shooting Percentage)
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage") %>%
cols_align(align = "left", columns = ShootPercent)
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage") %>%
cols_align(align = "right", columns = ShootPercent)
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage") %>%
cols_align(align = "center", columns = ShootPercent, G, A, P)
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage") %>%
cols_align(align = "center", columns = c(ShootPercent, G, A, P))
#NHL_Stats_2020_2021$P = factor(NHL_Stats_2020_2021$P, ordered = TRUE)
# NHL_Stats_2020_2021$G = factor(NHL_Stats_2020_2021$G, ordered = TRUE)
# NHL_Stats_2020_2021$A = factor(NHL_Stats_2020_2021$A, ordered = TRUE)
# NHL_Stats_2020_2021$S. = factor(NHL_Stats_2020_2021$S., ordered = TRUE)
library(gt)
library(dplyr)
library(tidyr)
NHL_Stats_2020_2021 %>%
filter(Player == "Connor McDavid" | Player == "Artemi Panarin" | Player == "Victor Hedman" | Player == "David Pastrnak") %>%
select(Player, Pos, G, A, P, ShootPercent) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Offensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(Pos = "Position", G = "Goals", A = "Assists", P = "Points", ShootPercent = "Shooting Percentage") %>%
cols_align(align = "center", columns = c(ShootPercent, G, A, P))
library(gt)
library(dplyr)
library(tidyr)
Defensive_Stats_Sheet1 %>%
filter(Player == "Connor McDavid" | Player == "David Pastrnak" | Player == "Artemi Panarin" | Player == "Victor Hedman") %>%
select(Player, Pos, HITS, BS) %>%
gt() %>%
tab_header(
title = md("The Ideal Player Based on Position (Defensive Statistics)")) %>%
tab_source_note(md("More information on player rankings available at NBCSports.com")) %>%
cols_label(HITS = "Hits", BS = "Blocked Shots") %>%
cols_align(align = "center", columns = c(HITS, BS))
median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[Pos == "Defenseman"])
median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[Pos == "D"])
median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[4 == "D"])
median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"]
median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "C"])
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent[as.numeric(NHL_Stats_2020_2021$Pos == "C")])
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent[as.numeric(NHL_Stats_2020_2021$Pos == "C")])
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent[as.numeric(NHL_Stats_2020_2021$Pos == "C")])
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
#median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent[as.numeric(NHL_Stats_2020_2021$Pos == "C")])
median.shoot.c
median(1:10)
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent)
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent))
median.shoot.c
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
options(digits = 3)
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent))
median.shoot.c
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
options(digits = 3)
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent[Pos == "D" & GP >= 28]))
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
options(digits = 3)
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D" & NHL_Stats_2020_2021$GP >= 28]))
median.shoot.c
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
options(digits = 3)
median.shoot.c = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D" & NHL_Stats_2020_2021$GP >= 28])
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
options(digits = 3)
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent)[NHL_Stats_2020_2021$Pos == "D" & NHL_Stats_2020_2021$GP >= 28])
median.shoot.c
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent)[NHL_Stats_2020_2021$Pos == "D" & NHL_Stats_2020_2021$GP >= 28])
median.shoot.c
# median.shoot.d = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "D"])
# median.shoot.d
# median.shoot.r = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "R"])
# median.shoot.r
# median.shoot.l = median(NHL_Stats_2020_2021$ShootPercent[NHL_Stats_2020_2021$Pos == "L"])
# median.shoot.l
median.shoot.c = median(as.numeric(NHL_Stats_2020_2021$ShootPercent)[NHL_Stats_2020_2021$Pos == "C" & NHL_Stats_2020_2021$GP >= 28])
median.shoot.c
